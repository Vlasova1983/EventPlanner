{"version":3,"file":"static/js/918.039f947a.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/OneCard/OneCard.module.css?ecf7","components/OneCard/OneCard.jsx","webpack://my-app/./src/Page/OneEvent/OneEvent.module.css?ce8f","Page/OneEvent/OneEvent.jsx","webpack://my-app/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","hooks/useBack.js","hooks/useEvent.js","hooks/useLang.js","utils/helpers/color/getColor.js","utils/helpers/createId/getRandomID.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"OneCard_title__dypUH\",\"card\":\"OneCard_card__6NyV8\",\"imgConteiner\":\"OneCard_imgConteiner__Z0gtV\",\"image\":\"OneCard_image__sE-aq\",\"conteinerText\":\"OneCard_conteinerText__To9T3\",\"description\":\"OneCard_description__v3-A1\",\"conteinerOptions\":\"OneCard_conteinerOptions__tjwhb\",\"option\":\"OneCard_option__npjtR\",\"priority\":\"OneCard_priority__yQuGk\",\"conteinerButton\":\"OneCard_conteinerButton__85QU4\",\"editButton\":\"OneCard_editButton__jqKy2\",\"deleteButton\":\"OneCard_deleteButton__MMQ-A\"};","import { Link, useNavigate } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport Notiflix from 'notiflix';\r\nimport { useLang } from '../../hooks/useLang';\r\nimport { useEvent } from '../../hooks/useEvent';\r\nimport { getColor } from '../../utils/helpers/color/getColor';\r\nimport styles from './OneCard.module.css';\r\n\r\nconst OneCard = ({ event }) => {\r\n    const { lang } = useLang();\r\n    const { events, setEvents } = useEvent(); \r\n    const navigate = useNavigate();  \r\n    const item = event[0];\r\n    \r\n    return (\r\n        <>\r\n            {item === undefined ? <p></p> :\r\n                < div >\r\n                    < h2 className={styles.title}>{item.title}</h2 >\r\n                    <div className={styles.card}>\r\n                        <div className={styles.imgConteiner}>                           \r\n                            <img className={styles.image} srcSet={`${item.url} 1x, ${item.url2} 2x`} src={item.url} alt={\"Event\"} width={'100%'} height={'100%'} loading={'lazy'}/>\r\n                        </div>\r\n                        <div className={styles.conteinerText}>\r\n                            <p className={styles.description}>{item.description}</p>\r\n                            <div className={styles.conteinerOptions}>\r\n                                <p className={styles.option}>{item.category}</p>\r\n                                <p className={styles.priority} style={{ color: getColor(item.priority) }}>{item.priority}</p>\r\n                                <p className={styles.option}>{item.location}</p>\r\n                                {lang === 'en' ?\r\n                                    <p className={styles.option}>{item.date} at {item.time}</p> :\r\n                                    <p className={styles.option}>{item.date} в {item.time}</p>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.conteinerButton}>\r\n                            <Link className={styles.editButton} to={'edit'} >\r\n                                {lang === 'en' ?\r\n                                    <p>Edit</p> :\r\n                                    <p>Редагувати</p>\r\n                                }\r\n                            </Link>\r\n                            {lang === 'en' ?\r\n                                <button className={styles.deleteButton} type=\"button\"\r\n                                    onClick={() => {\r\n                                        lang === 'en' ? Notiflix.Notify.success('Congratulations! You have successfully deleted the event') : Notiflix.Notify.failure('Вітаємо!Ви успішно видалили подію.');\r\n                                        setEvents(events.filter((event) => event.id !== item.id))\r\n                                        navigate(-1);\r\n                                     }}\r\n                                >Delete event</button> :\r\n                                <button className={styles.deleteButton} type=\"button\"\r\n                                    onClick={() => {\r\n                                        lang === 'en' ? Notiflix.Notify.success('Congratulations! You have successfully deleted the event') : Notiflix.Notify.failure('Вітаємо!Ви успішно видалили подію.');\r\n                                        setEvents(events.filter((event) => event.id !== item.id))\r\n                                        navigate(-1);\r\n                                     }}\r\n                                >Видалити подію</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            } \r\n        </>\r\n    )\r\n}\r\nexport default OneCard;\r\n\r\nOneCard.propTypes = {       \r\n    event: PropTypes.array,   \r\n}","// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"OneEvent_conteiner__F4das\",\"conteinerPage\":\"OneEvent_conteinerPage__pzSer\",\"backButton\":\"OneEvent_backButton__PE+Hv\"};","import { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport OneCard from '../../components/OneCard/OneCard';\r\nimport BackButton from '../../components/BackButton/BackButton';\r\nimport styles from '../OneEvent/OneEvent.module.css';\r\n\r\nconst OneEvent = () => {\r\n    const { eventId } = useParams();\r\n    const data = useSelector(state => state.events.data);      \r\n\r\n    return (        \r\n        <section className={styles.conteiner}>\r\n            <BackButton/>                \r\n            <div className={styles.conteinerPage}>                \r\n                <OneCard event={data.filter((item)=>item.id.includes(eventId))}/>                   \r\n            </div>\r\n        </section>                \r\n    );\r\n};\r\n\r\nexport default OneEvent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"BackButton_backButton__-woV6\"};","import { useParams, useNavigate } from 'react-router-dom';\r\nimport Icon from '@mdi/react';\r\nimport { mdiArrowLeft } from '@mdi/js';\r\nimport { useLang } from '../../hooks/useLang';\r\nimport { useBack } from '../../hooks/useBack';\r\nimport { getRandomID } from '../../utils/helpers/createId/getRandomID';\r\nimport styles from './BackButton.module.css';\r\n\r\nconst BackButton = () => {\r\n    const { lang } = useLang();\r\n    const { setInJumpBack } = useBack();\r\n    const { eventId } = useParams();\r\n    const navigate = useNavigate();\r\n    const currentUrl = window.location.pathname;\r\n\r\n    const goBack = () => {        \r\n        if (currentUrl === `/event/${eventId}`) {\r\n           setInJumpBack( getRandomID())\r\n            navigate(-1);\r\n        } else {\r\n            navigate(-1);            \r\n        }        \r\n    }\r\n\r\n    return (       \r\n        <button onClick={goBack} type=\"button\" className={styles.backButton}>\r\n            <Icon path={mdiArrowLeft} size={1} />\r\n            {lang === 'en' ?\r\n                <p className={styles.backButtonText}>Back</p> :\r\n                <p className={styles.backButtonText}>Назад</p>\r\n            }               \r\n        </button>           \r\n    )\r\n}\r\nexport default BackButton;\r\n\r\n","import { useState } from \"react\";\r\n\r\nexport const useBack =()=>{\r\n    const[jumpBack,setInJumpBack]=useState();\r\n    \r\n    return { jumpBack, setInJumpBack }\r\n}","import { useState } from \"react\";\r\nimport data from \"../data/data.json\";\r\n\r\nexport const useEvent =()=>{\r\n   const [events, setEvents] = useState(() => {\r\n    return JSON.parse(localStorage.getItem('events')) || data;\r\n  }); \r\n    return {events, setEvents}\r\n}","import { useLayoutEffect, useState } from \"react\";\r\n\r\nexport const useLang =()=>{\r\nconst [lang,setLang]=useState(localStorage.getItem('language')||'en');\r\nuseLayoutEffect(()=>{\r\n    document.documentElement.setAttribute('language', lang);\r\n    localStorage.setItem('language', lang);\r\n    \r\n},[lang])\r\n\r\nreturn {lang,setLang}\r\n}","export const getColor = variant => {\r\n    switch (variant) {\r\n        case 'Medium':\r\n          return \"rgba(226, 163, 0, 1)\";\r\n        case 'Важлива':\r\n          return \"rgba(226, 163, 0, 1)\";\r\n        case \"Hight\":\r\n          return \"rgba(255, 43, 119, 1)\";\r\n        case \"Середня\":\r\n          return \"rgba(255, 43, 119, 1)\";\r\n        case \"Low\":\r\n          return \"rgba(107, 212, 117, 1)\"; \r\n        case \"Низька\":\r\n          return \"rgba(107, 212, 117, 1)\";   \r\n        default:\r\n          throw new Error(`Unsupported variant prop value - ${variant}`);\r\n    }\r\n};","export const getRandomID = () => {\r\n  return `${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n}"],"names":["_ref","event","lang","useLang","_useEvent","useEvent","events","setEvents","navigate","useNavigate","item","_jsx","_Fragment","children","undefined","_jsxs","className","styles","title","srcSet","concat","url","url2","src","alt","width","height","loading","description","category","style","color","getColor","priority","location","date","time","Link","to","type","onClick","Notiflix","success","failure","filter","id","eventId","useParams","data","useSelector","state","BackButton","OneCard","includes","setInJumpBack","_useState","useState","_useState2","_slicedToArray","jumpBack","useBack","currentUrl","window","pathname","getRandomID","backButton","Icon","path","mdiArrowLeft","size","backButtonText","JSON","parse","localStorage","getItem","setLang","useLayoutEffect","document","documentElement","setAttribute","setItem","variant","Error","Math","floor","random","toString"],"sourceRoot":""}